package main

import "fmt"

func main() {
	/*
		二维数组
		二维数组表示一个数组中的每个元素也是数组

		声明二维数组:
		var arr [n][m]int
	*/

	// 声明并创建二维数组
	arr := [3][3]int{
		{1, 2, 3},
		{7, 8, 9},
		{4, 5, 6},
	}
	fmt.Println(arr)
	fmt.Println(arr[1][1])

	// 三为数组
	/*
		理论上支持无限多维数组(只要内存够用)
		三维数组可以理解成,一维数组中每个元素都是二维数组.四维数组理解成,一个一维数组中每个元素都是三维数组
		无论是几维数组,都符号元素类型是相同的
		实际开发中多维数组使用并不多,在一定程度上,程序员使用多维数组很容易出错
	*/
	arr1 := [2][2][2]int{
		{
			{1, 2},
			{3, 4},
		},
		{
			{5, 6},
			{7, 8},
		},
	}
	fmt.Println(arr1)
	fmt.Println(arr1[0][1][1])
}
