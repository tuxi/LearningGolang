package main

import "fmt"

func main() {

	// 原码：0000 0011
	// 反码：0000 0011
	// 补码：0000 0011
	var a int8 = 3
	// 原码：0000 0010
	// 反码：1111 1101
	// 补码：1111 1110
	var b int8 = -2

	// 正数乘以2的几次方
	fmt.Println(a << 2) // 0000 1100
	// 负数乘以2的几次方，操作的是原码
	fmt.Println(b << 2) // 0000 1000

	// 正数右移最小值为0
	fmt.Println(a >> 1) // 0000 0000
	// 负数右移最小值为-1
	fmt.Println(b >> 1) // 0000 0000

	fmt.Println(a | b)  // 1111 1111 ---> 1111 1110 ---> 0000 0001
	fmt.Println(a & b)  // 0000 0010 ---> 0000 0010 ---> 0000 0010
	fmt.Println(a ^ b)  // 1111 1101 ---> 1111 1100 ---> 0000 0011
	fmt.Println(a &^ b) // 0000 0001 ---> 0000 0001 ---> 0001
}

/*
位运算的知识点
对于Go语言的<<(左移)和>>(右移)操作符，关键点如下：
- 1.将移位的值先转换为二进制，右移就是高位补码，左移就是低位补码
- 2.操作符右边的是需要移动的位数，左侧是待移动的值，例如：
	- 1<<3 就是把1向左移动3位，即00000001 左移3位，变为00000100，就是4
	- 1>>3 就是把1向
*/
